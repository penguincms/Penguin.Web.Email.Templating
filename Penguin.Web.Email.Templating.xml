<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Penguin.Web.Email.Templating</name>
    </assembly>
    <members>
        <member name="T:Penguin.Web.Email.Templating.EmailTemplateRenderer">
            <summary>
            An email template binder/renderer that uses the MVC view engine to allow for C# based email templating
            </summary>
        </member>
        <member name="M:Penguin.Web.Email.Templating.EmailTemplateRenderer.#ctor(Penguin.Web.Mvc.Abstractions.IViewRenderService,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Constructs a new instance of this templating engine
            </summary>
            <param name="viewRenderService">An implementation of a View Renderer for retrieving HTML</param>
            <param name="hostingEnvironment">An instance of a hosting environment for template generation</param>
        </member>
        <member name="M:Penguin.Web.Email.Templating.EmailTemplateRenderer.RenderEmail(System.Collections.Generic.IEnumerable{Penguin.Templating.Abstractions.TemplateParameter},Penguin.Email.Templating.Abstractions.Interfaces.IEmailTemplate,System.Reflection.PropertyInfo)">
            <summary>
            Takes information required by the email template and attempts to return bound HTML representing the provided field
            </summary>
            <param name="SourceValues">A collection of object names and values to be passed into the template</param>
            <param name="Template">The template to use for generation</param>
            <param name="Field">The field/property on the email template that this call is binding (in case its not the body)</param>
            <returns>The Html contents of the post-bound template field</returns>
        </member>
    </members>
</doc>
